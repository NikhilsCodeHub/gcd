install.packages("mysql")
install.packages("RMySQL")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:jsonlite", unload=TRUE)
ucscs<-dbConect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
ucscs<-dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
install.packages("RMySQL")
ucscs<-dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
ucscs<-dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
ucscs
result<-dbGetQuery(ucscDb,"show databases;");
result<-dbGetQuery(ucscs,"show databases;");
result
dbDisconnect(uscscs)
dbDisconnect(ucscs)
hg19<-dbConnect(MySQL(), user="genome",db="hg19" host="genome-mysql.cse.ucsc.edu")
hg19<-dbConnect(MySQL(), user="genome",db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
allTables
length(allTables)
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2" )
affyData<-dbReadTable(hg19,"affyU133Plus2")
head(affyData)
dim(affyData)
savehistory("~/GitHub/DataScience/gcd/gcd.Rhistory")
query<-dbSendQuery(hg19, "select * from affyU1333Plus2 where misMatches between 1 and 3")
query<-dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
warnings()
a<-fetch(query)
quantile(affyData)
savehistory("~/GitHub/DataScience/gcd/gcd.Rhistory")
dbDisconnect(ucscs)
?nchar
library(httr)
htmltxt<-GET("http://biostat.jhsph.edu/~jleek/contact.html")
htmltxt
contenttxt<-content(htmltxt,as="text")
contenttxt
class(htmltxt)
t<-read.table("http://biostat.jhsph.edu/~jleek/contact.html",sep="\n", header="FALSE")
t<-read.table("http://biostat.jhsph.edu/~jleek/contact.html",sep="\n", header=FALSE)
t
t[c(10,20,30),]
nchar(t[c(10,20,30),])
t[c(10,20,30)]
t[c(10,20,30),1]
paste(t[c(10,20,30),1])
nchar(paste(t[c(10,20,30),1]))
t<-read.table("http://biostat.jhsph.edu/~jleek/contact.html",sep="\n", header=FALSE, blank.lines.skip=FALSE)
paste(t[c(10,20,30),1])
nchar(paste(t[c(10,20,30),1]))
length(t[10,])
t[10,1]
length(t[10,1])
x<-t[10,1])
x<-t[10,1]
length(x)
x
x<-as.charachter(t[10,1])
x<-as.character(t[10,1])
x
length(x)
t<-read.table("http://biostat.jhsph.edu/~jleek/contact.html",sep="\n", header=FALSE, blank.lines.skip=FALSE, colClasses = "character")
t[10,1]
t<-read.table("http://biostat.jhsph.edu/~jleek/contact.html",sep="\n", header=FALSE, blank.lines.skip=FALSE, colClasses = "character", quote="\"")
t[10,1]
t<-read.table("http://biostat.jhsph.edu/~jleek/contact.html",sep="\n", header=FALSE, blank.lines.skip=FALSE, colClasses = "character", quote=""")
)
""
t<-read.table("http://biostat.jhsph.edu/~jleek/contact.html",sep="\n", header=FALSE, blank.lines.skip=FALSE, colClasses = "character", quote="""")
t<-read.table("http://biostat.jhsph.edu/~jleek/contact.html",sep="\n", header=FALSE, blank.lines.skip=FALSE, colClasses = "character", quote="")
t[10,1]
x<-as.character(t[10,1])
x
nchar(x)
nchar(paste(t[c(10,20,30),1]))
nchar(paste(t[c(10,20,30,100),1]))
t[c(10,20,30,100),1]
t<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", header=TRUE, blank.lines.skip=FALSE, colClasses = c("character","numeric","numeric","numeric","numeric"), skip=3, sep="     ")
t<-read.table("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", header=TRUE, blank.lines.skip=FALSE, colClasses = c("character","numeric","numeric","numeric","numeric"), skip=3, sep="     ")
t<-read.table("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", header=TRUE, blank.lines.skip=FALSE, colClasses = c("character","numeric","numeric","numeric","numeric"), skip=3, sep=" ")
t<-read.table("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", skip=3, sep=" ", header=TRUE, blank.lines.skip=FALSE, colClasses = "character")
t
t<-read.table("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", skip=3, sep=" ", header=TRUE, blank.lines.skip=FALSE, colClasses = "character")
t
head(t)
t<read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(-9,-4,-4,4))
t<read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(-9,-4,-4,4))
t<-read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(-9,-4,-4,4))
head(t)
t<-read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(-9,-4,-4,4), skip=3)
head(t)
t<-read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(9,4,4,4), skip=3)
head(t)
t<-read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(9,5,4,4,5,4), skip=3)
head(t)
t<-read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(9,5,4,4,5,4), skip=3, colClasses="character")
head(t)
t<-read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(9,5,4,4,5,4), skip=3, colClasses="character",n=10)
head(t)
t<-read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,5,4,4,5,4), skip=3, colClasses="character",n=10)
head(t)
t<-read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,5,4,4,5,4), skip=3, colClasses="character")
head(t)
dim(t)
sum(2+2)
sum(t[,6])
sum(as.numeric(t[,6])
)
t[,6]
sum(as.numeric(t[2:1255,6])
)
oauth_endpoints("github")
myapp <- oauth_app("github", "f3db086d8eec055495e0")
myapp <- oauth_app("github", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5
")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5
")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache="FALSE")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache=FALSE)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache=FALSE)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
gtoken <- config(token = github_token)
gtoken
myapp <- oauth_app("github", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5
")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
github <- oauth_endpoint(NULL, "authorize", "access_token",
base_url = "https://github.com/login/oauth")
github
oauth_endpoints("github")
myapp <- oauth_app("github", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5
")
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5
")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
req
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
req
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5
")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5
)
""
"
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
gtoken
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
req
github_token
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
myapp <- oauth_app("MyOauthRApp", "f3db086d8eec055495e0", secret="cdfe516195621af7cc3957c1384192d669f266d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
savehistory("~/GitHub/DataScience/gcd/gcd.Rhistory")
x < factor(c(“yes”, “yes”, “no”, “yes”))
x <-factor(c(“yes”, “yes”, “no”, “yes”))
x <-factor(c("yes", "yes", "no", "yes"))
x
library(jsonlite)
jsondata<-fromJSON("https://api.github.com/users/jtleek/repos")
jsondata
head(jsondata)
iris
head(iris)
names(jsondata)
jsondata$name
jsondata[jsondata$name=="datasharing",]
head(jsondata[jsondata$name=="datasharing",])
names(jsondata[jsondata$name=="datasharing",])
jsondata[jsondata$name=="datasharing","created_at"]
savehistory("~/GitHub/DataScience/gcd/gcd.Rhistory")
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", sep=",", Header=TRUE, stringsAsFactors=FALSE)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", sep=",", header=TRUE, stringsAsFactors=FALSE)
gdp<-read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", sep=",", header=TRUE, stringsAsFactors=FALSE)
head(gdp)
gdp<-read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", sep=",", header=TRUE, stringsAsFactors=FALSE, skip=4)
head(gdp)
install.package("dplyr")
install.packages("dplyr")
library(dplyr)
head(gdp)
tail(gdp)
gdpDF<-select(gdp, c(1, 2, 4, 5))
gdpDF
head(gdpDF)
gdpDF<-tbl_df(gdp)
gdpDF
gdpDF<-select(gdpDF,c("CountryCode", ""))
gdpDF<-tbl_df(gdpDF)
gdpDF
gdpDF<-select(gdp, c(1, 2, 4, 5))
gdpDF<-tbl_df(gdpDF)
gdpDF
colnames(gdpDF)<-c("CountryCode", "Ranking", "Country", "GDP")
gdpDF
filter(gdpDF, Ranking!=NAN)
filter(gdpDF, Ranking==NAN)
filter(gdpDF, Ranking==NA)
filter(gdpDF, Ranking=="")
filter(gdpDF, Ranking!="")
gdpD
gdpDF
gdpDF<-filter(gdpDF, Ranking!="")
tail(gdpDF)
filter(gdpDF, GDP!="")
tail(filter(gdpDF, GDP!=""))
gdpDF<-filter(gdpDF, GDP!="")
gdpDF
tail(gdpDF)
str(gdpDF)
gdpDF$gdp<-as.numeric(gdpDF$gdp)
as.numeric(gdpDF$gdp)
as.numeric(gdpDF[1,4])
gdpDF[1,4]
str(gdpDF)
t<-c(1,2,3)
str(t)
mode(t)
class(t)
m<-c(c(1),c(1),c(1))
m
class(m)
m<-c(c(1),c(1,2,3),c(1,4,5))
m
m<-list(c(1),c(1,2,3),c(1,4,5))
m
m[[2]]
m[[2],1]
m[[2,1]]
m[2]
m[2][1]
m[2][2]
m[2][1]
m[2,1]
m[2][,1]
m[2][1]
m[2][2]
m[2][2,]
m[2][,1]
m[2][,2]
t
t<-c("qwe","ewr","trew")
t
substr(t,1,2)
substr(t,1,3)
substr(t,2,3)
substr(t,2,4)
substr(t,2,5)
substr(t,2,2)
?grep
grep("w",t)
grep("q",t)
grep("e",t)
grep("t",t)
sub("w","c",t)
gdpDF
gdpDF$gdp<-sub(",","",gdpDF$gdp)
gdpDF$gdp<-sub(","," ",gdpDF$gdp)
sub(","," ",gdpDF$gdp)
sub(",","",gdpDF[,4])
sub(","," ",gdpDF[,4])
gsub(","," ",gdpDF[,4])
gsub(",","",gdpDF[,4])
gsub(",","",gdpDF$gdp)
gdpDF
gsub(",","",gdpDF$GDP)
as.numeric(gsub(",","",gdpDF$GDP))
mean(as.numeric(gsub(",","",gdpDF$GDP)))
hs<-read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", sep=",", header=TRUE, stringsAsFactors=FALSE)
hs
dim(hs)
head(hs)
?strsplit
strsplit(hs, "wgtp")
strsplit(colnames(hs), "wgtp")
gdpDF
grep("^United",Country)
grep("^United",gdpDF$Country)
gdp<-read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", sep=",", header=TRUE, stringsAsFactors=FALSE, skip=4)
gdp
head(gdp)
gdp<-gdp[1:190,]
tail(gdp)
edu<-read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",sep=",",header=TRUE, stringsAsFactors=FALSE)
edu
head(edu)
tail(edu)
head(gdp)
gdp<-tbl_df(gdp)
gdp<-select(gdp, c(1, 2, 4, 5))
gdp
colnames(gdp)<-c("CountryCode", "Ranking", "CountryName", "GDP")
gdp
edu<-tbl_df(edu)
edu
data<-innerjoin(gdp, edu, c("CountryCode=CountryCode"))
data<-inner_join(gdp, edu, c("CountryCode=CountryCode"))
data<-inner_join(gdp, edu, c("CountryCode"="CountryCode"))
data
dim(data)
colnames(edu)
grep("Fiscal year end", data)
grep("*Fiscal year end*", data)
grep("Fiscal year end*", data)
grep("Fiscal year end", data$Special.Notes)
grep("Fiscal year end", data$Special.Notes, value=TRUE)
grep("June", grep("Fiscal year end", data$Special.Notes, value=TRUE))
length(grep("June", grep("Fiscal year end", data$Special.Notes, value=TRUE)))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
amzn
head(amzn)
head(sampleTimes)
strptime(sampleTimes, format="%Y-%m-%d")
sampleTimes<-strptime(sampleTimes, format="%Y-%m-%d")
sampleTimes[1]
strptime(sampleTimes[1], format("%A")
)
strptime(sampleTimes[1], format="%A")
format(sampleTimes[1], format="%A")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
grep("2012", sampleTimes)
length(grep("2012", sampleTimes))
sampleTimes[1]
format(sampleTimes[1], "%A")
format(sampleTimes, "%A")
format(sampleTimes, "%A")="Monday"
format(sampleTimes, "%A")=="Monday"
days<-format(sampleTimes, "%A")
days[days=="Monday"]
length(days[days=="Monday"])
days=="Monday"
days<-format(sampleTimes, "%Y %A")
days
days[days=="2012 Monday"]
